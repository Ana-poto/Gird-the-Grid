@page "/register"
@inject HttpClient Http

<div class="text">
    <h1 class="h1-title"> Welcome to Grid the Grid</h1><br />
    <h2 class="h1-title"> Please, register so we can get started</h2>
</div>
<br />

@if (!logged)
{
    <div class="flex-container" style="margin: 0 auto; display:flex; justify-content:center; width:50%">
        <EditForm Model="@registerModel" OnValidSubmit="@Send_registration">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <InputText id="username" @bind-Value="registerModel.username" type="text" class="form-control" placeholder="Email" required />
            <br />
            <InputText id="password1" @bind-Value="registerModel.password1" type="password" class="form-control" placeholder="Password1" required />
            <br />
            <InputText id="password2" @bind-Value="registerModel.password2" type="password" class="form-control" placeholder="Password2" required />
            <br />
            <button class="custom-button" type="submit">Register</button>
        </EditForm>
    </div>
}
else
{
    <br />
    <p>@response</p>
}

@code {

    private BlazorClient.Model.RegisterModel registerModel = new BlazorClient.Model.RegisterModel();

    private bool logged = false;

    private string response;

    private class RegisterPacket
    {
        public string username { get; set; }
        public string password { get; set; }
        public string password2 { get; set; }

        public RegisterPacket(string u, string p, string p2)
        {
            username = u;
            password = p;
            password2 = p2;
        }
    }

    private async Task Send_registration()
    {
        RegisterPacket rp = new RegisterPacket(registerModel.username, registerModel.password1, registerModel.password2);

        //var r = await Http.PostAsJsonAsync("https://dsctraining.ancestormithril.repl.co/auth/register", lp); //other server
        var r = await Http.PostAsJsonAsync("http://localhost:49429/auth/register", new { email = rp.username, password = rp.password, password2 = rp.password2 }); // our server
        response = await r.Content.ReadAsStringAsync();
        logged = true;

        await InvokeAsync(() =>
        {
            StateHasChanged();
        });
    }
}
